{"version":3,"file":"static/js/64.142d0d5c.chunk.js","mappings":"kLAMe,SAASA,EAAeC,GAA4E,IAAzEC,EAASD,EAATC,UAAWC,EAAsBF,EAAtBE,uBAEjD,OAAOC,EAAAA,EAAAA,MAAA,UAAQC,SAAU,SAACC,GACtB,IAAMC,EAA2B,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWM,MAAK,SAACC,GAAE,OAAKA,EAAGC,KAAOC,OAAOL,EAAEM,OAAOC,MAAM,IAC5EN,GACAJ,EAAuBI,EAE/B,EACIO,aAAa,UAASC,SAAA,EAEtBC,EAAAA,EAAAA,KAAA,UAAQH,MAAM,UAASE,SAAC,qBAEpBb,EAAYA,EAAUe,QAAO,SAACR,GAAE,OAAMA,EAAGS,KAAKC,WAAW,mBAAmB,IAAEC,MAAK,SAACC,EAAGC,GAAC,OAAMD,EAAEH,KAAOI,EAAEJ,KAAO,GAAK,CAAC,IAAGK,KAAI,SAACC,GAC1H,OAAOR,EAAAA,EAAAA,KAAA,UAAyBH,MAAOW,EAAQd,GAAGK,SAAES,EAAQN,MAAxCM,EAAQd,GAEhC,KAAKM,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BAIpB,C","sources":["components/CompanyDropdown.tsx"],"sourcesContent":["import { Company } from \"../types/Company\"\n\nexport type CompanyDropdownProps = {\n    companies: Company[]\n    selectedCompanyHandler: (company: Company) => void\n}\nexport default function CompanyDropdown({ companies, selectedCompanyHandler }: CompanyDropdownProps): JSX.Element {\n\n    return <select onChange={(e) => {\n        const selectedCompany = companies?.find((el) => el.id === Number(e.target.value))\n        if (selectedCompany) {\n            selectedCompanyHandler(selectedCompany)\n        }\n    }}\n        defaultValue=\"default\"\n    >\n        <option value=\"default\">Choose an option</option>\n        {\n            companies ? companies.filter((el) => !el.name.startsWith('Untitled Dataset')).sort((a, b) => (a.name > b.name ? 1 : -1)).map((company) => {\n                return <option key={company.id} value={company.id}>{company.name}</option>\n\n            }) : <p>Cannot load information</p>\n        }\n    </select>\n\n}"],"names":["CompanyDropdown","_ref","companies","selectedCompanyHandler","_jsxs","onChange","e","selectedCompany","find","el","id","Number","target","value","defaultValue","children","_jsx","filter","name","startsWith","sort","a","b","map","company"],"sourceRoot":""}